h1. ThinkTank Tests

All code submitted to the repository should have corresponding tests that pass.

The test suite assumes there is a <code>thinktank_tests</code> database which the default ThinkTank db user can access. Each test should set up the appropriate test data in the <code>setUp()</code> method and drop those tables in the <code>tearDown()</code> method.

h2. Running Tests

To run a particular test, like the UserDAO test, in the thinktank source code root folder, use this command:

<code>$ php tests/userdao_tests.php</code>

To run all the tests, use:

<code>$ php tests/all_tests.php</code>

The webapp tests contained in <code>tests/frontend_test.php</code> assumes you have a local installation of ThinkTank and that it is using the thinktank_tests database. Make sure you update your <code>config.inc.php</code> to point to the <code>thinktank_tests</code> database before running the webapp tests. 

h2. Writing Tests

Best practices for writing tests are still getting developed. In the meantime, use some existing tests as examples.

h3. DAO Tests

See <code>userdao_test.php</code> as an example of a set of DAO tests.

h3. Web Page Tests

Add tests for particular pages inside the webapp to <code>frontend_test.php</code>.

h3. Crawler Consumption Tests

To test consumption of data from web services, mock up the appropriate classes and store test data to local files.
For example, the <code>classes/mock.TwitterOAuth.php</code> class reads data from the files in the <code>testdata</code> directory.

Once your tests work, add them to the <code>all_tests.php</code> file to run along with the existing tests.